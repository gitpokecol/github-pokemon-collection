<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="{{width}}" height="{{height}}">
    <style>
        @font-face{
            font-family:public pixel;
            font-style:normal;
            font-weight:400;
            src:url(data:font/woff;chatset=utf-8;base64,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) format('woff')
        }

        :root {
            --pokemon-x-offsets: 20px;
            --pokemon-y-offsets: 20px;
            --pokemon-move-duration: 10s;
            --pokemon-move-delay: 0s;
        }

        text { font-family: 'Public Pixel', sans-serif; fill: {{text_color}}; }

        .header text { font-weight: 0; font-size: 12px; }

        .bottom { transform: translate(0, calc({{height}}px - 20px))}
        .bottom text { font-weight: 0; font-size: 10px; }
        .bottom #cp { transform: translate(calc({{width}}px - 120px), 0)}

        .frame-1 { animation: 0.5s linear infinite move-frame-1; }
        .frame-2 { animation: 0.5s linear infinite move-frame-2; }
        @keyframes move-frame-1 { 0% {opacity: 0;} 49.99% {opacity: 0;} 50% {opacity: 1;} 100% {opacity: 1;} }
        @keyframes move-frame-2 { 0% {opacity: 1;} 49.99% {opacity: 1;} 50% {opacity: 0;} 100% {opacity: 0;} }

        .pokemon {
            opacity: 0;
            animation-name: move-pokemon-left;
            animation-duration: calc(var(--pokemon-move-duration) * {{width}} / 300);
            animation-delay: var(--pokemon-move-delay);
            animation-iteration-count: infinite;
            animation-timing-function: linear;
        }

        .pokemon.left-face {
            animation-name: move-pokemon-left;
        }
        .pokemon.right-face {
            animation-name: move-pokemon-right;
        }

        @keyframes move-pokemon-left {
            0% {opacity: 1; transform: translate(120%, var(--pokemon-y-offsets));}
            100% {opacity: 1; transform: translate(-120%, var(--pokemon-y-offsets));}
        }
        @keyframes move-pokemon-right {
            0% {opacity: 1; transform: translate(-20%, var(--pokemon-y-offsets));}
            100% {opacity: 1; transform: translate(220%, var(--pokemon-y-offsets));}
        }        
    </style>
    <defs>
        <rect id="bg" x="0.01%" y="0.01%" rx="4.5" width="99.99%" height="99.99%" stroke="#e4e2e2" fill="#ffffff" stroke-opacity="1"/>
        <clipPath id="bg-clip">
            <use xlink:href="#bg"/>
        </clipPath>
    </defs>
    {{background}}
    <g class="header" transform="translate(20, 30)">
        <text x="0" y="0">{{username}}'s Pokemons</text>
    </g>
    <g class="bottom">
        <g transform="translate(20, 0)">
            <text x="25" y="0">({{n_pokemons}})</text>
            <image x="-7" y="-22" width="30" height="30" xlink:href="{{poke_ball_url}}"/>
        </g>
        <g id="cp">
            <text x="25" y="0">CP {{commit_point}}</text>
        </g>
    </g>
    <g id="pokemons" transform="translate(0,30)">
        {{pokemons}}
    </g>
</svg>